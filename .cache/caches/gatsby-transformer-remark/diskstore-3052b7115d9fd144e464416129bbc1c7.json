{"expireTime":9007200797173044000,"key":"transformer-remark-markdown-html-601107758a98f456ff2d012488673779--","val":"<h3>But today, I lost.</h3>\n<h2>Hello</h2>\n<h1>Test</h1>\n<p>Hello, <strong>world</strong></p>\n<pre><code>import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport './normalize.css';\nimport PageIntro from '../components/PageIntro';\nimport MobileNav from '../components/MobileNav';\nimport BlogPreviewCard from '../components/BlogPreviewCard';\nimport Footer from '../components/Footer';\n\n//styled component\nconst PageContainer = styled.div`\n    margin: 0;\n    padding: 0;\n`;\n\n//styled component\nconst BlogListContainer = styled.div`\n    height: auto;\n    max-width: 1125px;\n    margin: 20px auto;\n    text-align: center;\n`;\n\nconst AboutHeadline = styled.h2`\n  font-family: 'Montserrat', 'Helvetica', sans-serif;\n  text-align: center;\n  letter-spacing: 1px;\n  color: #353535;\n    @media (min-width: 820px) {\n      font-size: 2em;\n    }\n`;\n\n//styled component\nconst BlogPostList = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n  padding: 15px;\n    margin: 0 auto;\n  width: 100%;\n  max-width: 1125px;\n`;\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openMobileNav = this.openMobileNav.bind(this);\n        this.closeMobileNav = this.closeMobileNav.bind(this);\n\n        this.state = {\n            mobileNavIsOpen: false,\n            bgImg: '../images/cave.jpg',\n        };\n    }\n\n    openMobileNav() {\n        this.setState({\n            mobileNavIsOpen: true\n        });\n    }\n\n    closeMobileNav() {\n        this.setState({\n            mobileNavIsOpen: false\n        });\n    }\n\n\n    render() {\n        // variable 'posts' is an array of all blog posts\n        // const posts = this.props.data.allContentfulBlogPost.edges;\n        console.log(this.props.data.allContentfulBlogPost.edges);\n\n        return (\n            &#x3C;PageContainer>\n                &#x3C;Helmet>\n                    &#x3C;meta charSet=\"utf-8\" />\n                    &#x3C;title>Blog - Jacob D. Castro&#x3C;/title>\n                    &#x3C;link rel=\"stylesheet\" src=\"//normalize-css.googlecode.com/svn/trunk/normalize.css\" />\n                    &#x3C;link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,500,700\" rel=\"stylesheet\" />\n                &#x3C;/Helmet>\n                &#x3C;MobileNav action={this.closeMobileNav} open={this.state.mobileNavIsOpen} />\n                &#x3C;PageIntro action={this.openMobileNav} headline=\"Blog\" aboutPage={false} />\n\n                &#x3C;BlogListContainer>\n                    &#x3C;AboutHeadline>RECENT POSTS&#x3C;/AboutHeadline>\n                    &#x3C;BlogPostList>\n                        {/* create new array of individual blog post preview cards */}\n                        {this.props.data.allContentfulBlogPost.edges.map(({node}) => {\n                            //set dynamic slug and insert in &#x3C;Link> component\n                            const blogSlug = `blog/${node.slug}`;\n                            return (\n                                &#x3C;Link key={node.id} to={blogSlug}>\n                                    &#x3C;BlogPreviewCard key={node.id} postData={node} />\n                                &#x3C;/Link>\n                            );\n                        })}\n                    &#x3C;/BlogPostList>\n                &#x3C;/BlogListContainer>\n\n                &#x3C;Footer backgroundIsBlack={false} />\n            &#x3C;/PageContainer>\n        );\n    }\n}\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query BlogPageQuery {\n        allContentfulBlogPost {\n            edges {\n                node {\n                    id\n            title\n            slug\n            subtitle\n            published\n            bodyContent {\n              bodyContent\n            }\n            heroImage {\n              title\n              description\n              file {\n                url\n                fileName\n                contentType\n              }\n            }\n            author {\n              id\n              name\n              email\n              birthday\n              biography {\n                biography\n              }\n            }\n                }\n            }\n        }\n    }\n`;\n</code></pre>"}